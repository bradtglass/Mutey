<Window x:Class="Mutey.Views.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:prism="http://prismlibrary.com/"
        prism:ViewModelLocator.AutoWireViewModel="True"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:vm="clr-namespace:Mutey.ViewModels"
        xmlns:popup="clr-namespace:Mutey.Popup"
        mc:Ignorable="d"
        ResizeMode="NoResize"
        Title="Mutey"
        Height="450" Width="300"
        d:DataContext="{d:DesignInstance vm:AppViewModel}">
    <DockPanel>
        <Button DockPanel.Dock="Bottom" HorizontalAlignment="Right"
                Width="60"
                Padding="3"
                Margin="10"
                Command="{Binding Settings.SaveCommand}">
            Save
        </Button>

        <TabControl>
            <TabItem Header="General">
                <StackPanel DataContext="{Binding Settings}">
                    <TextBlock FontWeight="Bold">Transform Mode</TextBlock>
                    <CheckBox IsChecked="{Binding IsPttEnabled}" Margin="5">Push-To-Talk</CheckBox>
                    <CheckBox IsChecked="{Binding IsToggleEnabled}" Margin="5">Toggle</CheckBox>
                </StackPanel>
            </TabItem>
            <TabItem Header="Popups">
                <StackPanel DataContext="{Binding Settings}">
                    <TextBlock FontWeight="Bold" Margin="5">Visibility</TextBlock>
                    <WrapPanel Orientation="Horizontal">
                        <RadioButton GroupName="PopupMode" Margin="5"
                                     IsChecked="{Binding PopupMode, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static popup:PopupMode.Off}}"
                                     ToolTip="No popups will be displayed">
                            Off
                        </RadioButton>
                        <RadioButton GroupName="PopupMode" Margin="5"
                                     IsChecked="{Binding PopupMode, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static popup:PopupMode.Temporary}}"
                                     ToolTip="Popups will appear temporarily and then fade away">
                            Temporary
                        </RadioButton>
                        <RadioButton GroupName="PopupMode" Margin="5"
                                     IsChecked="{Binding PopupMode, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static popup:PopupMode.Permanent}}"
                                     ToolTip="The popup is always displayed and can be repositioned">
                            Permanent
                        </RadioButton>
                    </WrapPanel>

                    <TextBlock FontWeight="Bold" Margin="5 15 5 5">Size</TextBlock>
                    <Slider HorizontalAlignment="Stretch" Margin="5"
                            Minimum="30" Maximum="80"
                            Value="{Binding PopupSize, UpdateSourceTrigger=PropertyChanged}" />
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Grid.Column="0" HorizontalAlignment="Right" Margin="5"
                                   FontWeight="Light">
                            Preview :
                        </TextBlock>
                        <Border Grid.Column="1" Margin="5"
                                Width="80" Height="80"
                                Background="{StaticResource DarkCheckerboardBrush}"
                                BorderBrush="DimGray" BorderThickness="1">
                            <popup:MicStatePopupControl HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        State="Unmuted"
                                                        Size="{Binding PopupSize}" />
                        </Border>
                    </Grid>
                </StackPanel>
            </TabItem>
            <TabItem Header="Input Devices">
                <DockPanel>
                    <Button DockPanel.Dock="Top"
                            Command="{Binding Mutey.RefreshHardwareCommand}"
                            HorizontalAlignment="Right" Margin="5">
                        <iconPacks:PackIconFontAwesome Kind="SyncSolid"
                                                       Width="16" Height="16"
                                                       Margin="2"
                                                       Foreground="#262626" />
                    </Button>

                    <StackPanel Orientation="Vertical">
                        <TextBlock Margin="5">
                            <Run Text="{Binding Mutey.PossibleHardware.Count, Mode=OneWay}" />
                            <Run>Available Device(s)</Run>
                        </TextBlock>

                        <ItemsControl ItemsSource="{Binding Mutey.PossibleHardware}" Margin="0 10">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type vm:PossibleHardwareViewModel}">
                                    <Button
                                        Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.Mutey.ToggleHardwareCommand}"
                                        CommandParameter="{Binding}">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Border Name="Border" CornerRadius="2" Padding="4"
                                                        Background="Transparent"
                                                        BorderThickness="1" BorderBrush="#050505">
                                                    <Grid Height="24" ToolTip="{Binding Id}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="30" />
                                                            <ColumnDefinition Width="300" />
                                                        </Grid.ColumnDefinitions>

                                                        <iconPacks:PackIconFontAwesome x:Name="Icon" Grid.Column="0"
                                                            Kind="CheckSolid"
                                                            Width="16" Height="16"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Foreground="DarkGreen"
                                                            Visibility="Hidden" />

                                                        <TextBlock Name="Text" Grid.Column="1"
                                                                   HorizontalAlignment="Left"
                                                                   VerticalAlignment="Center">
                                                            <Run Text="{Binding Name, Mode=OneWay}" />
                                                            <Run
                                                                Text="{Binding Type, Mode=OneWay, StringFormat={} ({0}) }"
                                                                FontWeight="Light"
                                                                FontSize="10" />
                                                        </TextBlock>
                                                    </Grid>
                                                </Border>

                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="Border" Property="Background"
                                                                Value="LightSteelBlue" />
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding IsActive}" Value="true">
                                                        <Setter TargetName="Text" Property="FontWeight" Value="Bold" />
                                                        <Setter TargetName="Icon" Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </DockPanel>

            </TabItem>
            <TabItem Header="Advanced">
                <StackPanel Orientation="Vertical" DataContext="{Binding Settings}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="10"
                                   ToolTip="This is the time taken to switch into push-to-talk (PTT) mode if both the toggle and PTT transform options are activated.">
                            Smart PTT Activation (ms)
                        </TextBlock>
                        <TextBox Text="{Binding SmartPttActivationMilliSeconds}" Width="50" Margin="10" />
                    </StackPanel>
                </StackPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>